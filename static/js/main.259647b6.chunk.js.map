{"version":3,"sources":["Components/NavBar/NavBar.js","Components/PersonsList/Person/Person.js","Components/PersonsList/PersonsList.js","Components/Footer/Footer.js","Components/UserInput/UserInput.js","Components/Technology/Technology.js","containers/App.js","serviceWorker.js","index.js"],"names":["NavBar","props","react_default","a","createElement","className","app_title","href","Person","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","btnBlock","btnLable","onClick","click","style","border","boxShadow","margin","width","height","padding","display","src","avatar_img","alt","borderRadius","name","age","type","onChange","change","value","Component","PersonsList","_this","togglePersonFlag","setState","showPersons","state","pickTeamMember","index","full_name","user_img","console","log","team_data","length","alert","available_users","user_data","slice","splice","updated_team","toConsumableArray","push","image","resetPersonState","persons","_this2","fetch","headers","Content-Type","Accept","then","response","json","results","location","city","_this3","help_msg","map","person","i","first","last","PersonsList_Person_Person","key","dob","picture","thumbnail","team_pick_msg","team_list","resetBtn","team_click","removePersonFromTeam","classes","join","Footer","clear","position","marginTop","color","backgroundColor","bottom","UserInput","submitHandler","email","body","autoFocus","Technology","App","inputChangeHandler","event","copy_persons","target","deletePerson","new_persons","Components_NavBar_NavBar","react_router","path","exact","render","component","Components_Footer_Footer","Boolean","window","hostname","match","ReactDOM","react_router_dom","src_containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.259647b6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst NavBar = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <h1>{props.app_title}</h1>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    \r\n                    <ul className=\"navMenu\">\r\n                        <li><a href=\"/\"> Home </a></li>                        \r\n                        <li><a href=\"/manage-team\"> Manage Team </a></li>\r\n                        <li><a href=\"/contact\"> Contact Us </a></li>\r\n                        <li><a href=\"/technology\"> Technology </a> </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    \r\n                </div>\r\n            </div>\r\n            <hr />            \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React, { Component} from 'react';\r\n\r\nclass Person extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n    }\r\n    \r\n    render() {\r\n            // Inline CSS\r\n            const divStyle = {\r\n            border: '2px solid black',\r\n            boxShadow: '0px 1px 1px black',\r\n            margin: '15px',\r\n            width: '300px',\r\n            height: '180px',\r\n            padding: '10px',\r\n            display: 'inline-block'\r\n\r\n        }\r\n\r\n        let btnBlock = null;\r\n        if(this.props.btnLable != null) btnBlock = <button className=\"btn btn-primary btn-sm\" onClick={this.props.click}>{this.props.btnLable}</button>\r\n\r\n        return (\r\n        \t<div style={divStyle}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <img src={this.props.avatar_img} alt=\"user\" style={{borderRadius: '50%'}}/>\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                        <p>Name: {this.props.name} </p>\r\n                        <p>Age: {this.props.age}</p>\r\n                        {btnBlock}\r\n                    </div>\r\n                </div>\r\n                <input type=\"text\" onChange={this.props.change} value={this.props.name} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Person;\r\n","import React, { Component } from 'react';\r\nimport Person from \"./Person/Person\";\r\n\r\nclass   PersonsList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state= {            \r\n          showPersons : false,\r\n          user_data : [],\r\n          team_data: []\r\n        }\r\n    }\r\n\r\n    // Life cycle methods\r\n    componentDidMount(){\r\n        console.log(\"component mounted\")\r\n\r\n        //https://www.googleapis.com/books/v1/volumes?q=isbn:0747532699 - BOOKS API\r\n        \r\n        // API to get random user details in the response.\r\n        fetch(\"https://randomuser.me/api/?results=10\", {\r\n        headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n        }\r\n\r\n        })\r\n        .then(response => response.json())\r\n        .then((response) => {\r\n        this.setState({user_data:response.results});\r\n\r\n        console.log(this.state.user_data)\r\n\r\n        console.log(this.state.user_data[0].location.city)\r\n        //console.log(typeof(Object.values(this.state.data)))\r\n\r\n        })\r\n\r\n    }\r\n\r\n    togglePersonFlag = () => {\r\n        this.setState({\r\n          showPersons: !this.state.showPersons\r\n        });\r\n    }\r\n\r\n    pickTeamMember = (index, full_name, age, user_img) => {\r\n        //team members not more than 3\r\n        console.log(this.state.team_data.length + 'length');\r\n        if(this.state.team_data.length > 2) {\r\n          alert('You can not pick more than 3 members in your team');\r\n          return false;\r\n        }\r\n        else {\r\n          let available_users = this.state.user_data.slice();\r\n          available_users.splice(index,1);\r\n    \r\n          let updated_team = [...this.state.team_data];\r\n          updated_team.push({name: full_name,age: age, image: user_img});\r\n    \r\n          this.setState({\r\n              user_data:available_users,\r\n              team_data: updated_team\r\n            });\r\n          }\r\n    \r\n    }\r\n\r\n    // removePersonFromTeam = (i, full_name, age, user_img) => {\r\n    //     let team = this.state.team_data.slice();\r\n    //     team.splice(i,1);\r\n\r\n    //     let available_users = [...this.state.user_data];\r\n    //     available_users.push({name: full_name,age: age, image: user_img});\r\n\r\n    //     this.setState({\r\n    //         user_data:available_users,\r\n    //         team_data: team\r\n    //       });\r\n    //     }\r\n\r\n    resetPersonState = () => {\r\n        this.setState({\r\n          persons : [\r\n            {name: 'Dev', age: 23},\r\n            {name: 'Max', age: 28},\r\n            {name: 'John', age: 24},\r\n            {name: 'RV', age: 22}\r\n          ],\r\n          team_data : []\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state);\r\n\r\n        let available_users = null;\r\n        let help_msg = 'Click Show Team button to view team details using HTTP request';\r\n\r\n        if(this.state.showPersons) {\r\n            available_users = this.state.user_data.map( (person,i) => {\r\n                let full_name = person.name.first + person.name.last\r\n                return <Person \r\n                        key={i} name={full_name} age={person.dob.age} \r\n                        avatar_img={person.picture.thumbnail}\r\n                        // change={(event) => this.props.changeHandler(event, i)} \r\n                        click={() => this.pickTeamMember(i,full_name, person.dob.age, person.picture.thumbnail)}\r\n                        btnLable='Pick'/>\r\n                });\r\n            help_msg = '';\r\n        }\r\n\r\n        let team_pick_msg = 'Select any team member from the available Users';\r\n        let team_list = null;\r\n        let resetBtn = null;\r\n        if(this.state.team_data.length > 0) {\r\n            team_pick_msg='';\r\n\r\n            resetBtn= <button className=\"btn btn-success btn-sm\" onClick={this.resetPersonState}>Reset</button>;\r\n\r\n            team_list = this.state.team_data.map( (person,i) => {\r\n            return <Person \r\n                    key={i} name={person.name} age={person.age} \r\n                    avatar_img={person.image}                    \r\n                    team_click={() => this.removePersonFromTeam(i, person.name, person.age, person.image)} \r\n                    />\r\n                    \r\n            })\r\n        }\r\n\r\n        // set dynamic class for show/hide button\r\n        const classes = [];\r\n        if(this.state.showPersons) classes.push('btn btn-warning')\r\n        else classes.push('btn btn-primary')\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                \r\n                    <p>{help_msg}</p>\r\n                    <button className={classes.join(' ')} onClick={this.togglePersonFlag}>{this.state.showPersons ? 'Hide' : 'Show' } Resources</button>\r\n                \r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <p>Available Resources</p>\r\n                        {available_users}\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <p>Your Team &nbsp; &nbsp; &nbsp; \r\n                            <span> {resetBtn} </span> \r\n                        </p>\r\n                        <p>{team_pick_msg}</p>\r\n                        {team_list}\r\n                    </div>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PersonsList;","import React from \"react\";\r\n\r\nconst Footer = (props) => {\r\n\r\n    const footerStyle= {\r\n        clear: 'both',\r\n        position: 'relative',\r\n        height: 'fit-content',\r\n        marginTop: '180px',\r\n        color: 'white',\r\n        backgroundColor: 'black',\r\n        bottom: 0\r\n    }\r\n\r\n    return (\r\n        <div style={footerStyle}>\r\n \r\n            <footer className=\"page-footer font-small blue pt-4\">\r\n            \r\n                <div className=\"container-fluid text-center text-md-left\">\r\n                \r\n                    <div className=\"row\">\r\n                        \r\n                        <div className=\"col-md-6 mt-md-0 mt-3\">\r\n                            \r\n                            <h5 className=\"text-uppercase\">About Us</h5>\r\n                            <p>This website is developed with core react concepts.</p>\r\n                            <p>Content of this website changes time by time</p>\r\n                        </div>\r\n                        \r\n                        <hr className=\"clearfix w-100 d-md-none pb-3\" />\r\n                        \r\n                        <div className=\"col-md-3 mb-md-0 mb-3\">\r\n                        \r\n                            <h5 className=\"text-uppercase\">Links</h5>\r\n                            <ul className=\"list-unstyled\">\r\n                            <li>\r\n                                <a href=\"#!\">Link 1</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#!\">Link 2</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#!\">Link 3</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#!\">Link 4</a>\r\n                            </li>\r\n                            </ul>\r\n                        </div>\r\n                    \r\n                    \r\n                        <div className=\"col-md-3 mb-md-0 mb-3\">\r\n                            \r\n                            <h5 className=\"text-uppercase\">Links</h5>\r\n                            <ul className=\"list-unstyled\">\r\n                            <li>\r\n                                <a href=\"#!\">Link 1</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#!\">Link 2</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#!\">Link 3</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#!\">Link 4</a>\r\n                            </li>\r\n                            </ul>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                \r\n                </div>\r\n            \r\n           \r\n                <div className=\"footer-copyright text-center py-3\">© 2020 Copyright:\r\n                    <a href=\"https://devarsh19.github.io/\"> Devarsh Patel</a>\r\n                </div>\r\n            \r\n            </footer>\r\n\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\n\r\nclass UserInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email : false\r\n        }\r\n        \r\n    }\r\n    \r\n    submitHandler = () => {\r\n        this.setState({\r\n            email : true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const inlinestyle = {\r\n            margin: \"10px\",\r\n            padding: \"10px\"\r\n        }\r\n\r\n        let body = (\r\n            <p>Your Email id : <input type=\"text\"  value=\"@gmail.com\" autoFocus/> \r\n                    <span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<button className=\"btn btn-primary\" onClick={this.submitHandler}>Submit</button> </span>\r\n            </p>\r\n        );\r\n        if(this.state.email) body = <p>Your email is received. Our team will contact you on next business day</p>\r\n\r\n        return (\r\n            <div style={inlinestyle}>\r\n                {body}                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserInput;","import React, { Component } from 'react';\r\n\r\nconst Technology = (props) => {\r\n    return (\r\n        <div>\r\n            <div className=\"container-fluid text-center\">\r\n                <h3>This pages gives brief information about Technology used so far.</h3>\r\n                <h6>Time by time new technologies will be implemented to make our Team Management software better.</h6>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <h4>Front-End</h4>\r\n                        <ul>\r\n                            <li> React.js</li>\r\n                            <li> React Router</li>\r\n                            <li> 3rd party API</li>\r\n                            <li>Bootstrap</li>                            \r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <h4>Back-End</h4>\r\n                        <ul>\r\n                            <li> Firebase</li>\r\n                            <li> Mongo DB (future scop)</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Technology;\r\n\r\n","import React, { Component } from 'react';\n// import logo from '../logo.svg';\nimport './App.css';\nimport NavBar from \"../Components/NavBar/NavBar\";\nimport PersonsList from \"../Components/PersonsList/PersonsList\";\nimport Footer from \"../Components/Footer/Footer\";\nimport UserInput from \"../Components/UserInput/UserInput\";\nimport Technology from \"../Components/Technology/Technology\";\n\n\nimport { Route } from \"react-router-dom\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state= {\n    \tpersons : [\n        {name: 'Dev', age: 23},\n        {name: 'Max', age: 28},\n        {name: 'John', age: 24},\n        {name: 'RV', age: 22}\n      ]  \n    }\n  }\n\n  // Life cycle methods\n  \n  inputChangeHandler = (event, index) => {\n    let copy_persons = [...this.state.persons];\n    copy_persons[index].name = event.target.value;\n\n\n    this.setState({\n      persons : copy_persons\n    })\n  }\n\n  deletePerson = (index) => {\n    \n    let new_persons = this.state.persons.slice(); //will copy the persons state array into new array\n    new_persons.splice(index,1);\n    // console.log(this.state.persons)\n\n    this.setState({\n     persons:new_persons \n    });\n  }\n\n  resetPersonState = () => {\n    this.setState({\n      persons : [\n        {name: 'Dev', age: 23},\n        {name: 'Max', age: 28},\n        {name: 'John', age: 24},\n        {name: 'RV', age: 22}\n      ],\n     // team_data : []\n    })\n  }\n\n  render() {\n    // console.log(this.state)\n  \n    return (\n      <div className=\"\">\n\n        <NavBar app_title=\"Manage Persons\" />\n\n        <Route path=\"/\" exact render={() => <div><h1>Welcome to Team Management MVP</h1> <p>Beta Version (Under Development)</p> <p>Click on Manage Team to get an overview</p> </div>} />\n\n        <Route path=\"/manage-team\" component={PersonsList} />\n\n        <Route path=\"/contact\" component={UserInput} />\n        \n        <Route path=\"/technology\" component={Technology} />\n\n        <Footer />\n\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './containers/App';\nimport { BrowserRouter} from \"react-router-dom\";\n\n\nimport * as serviceWorker from './serviceWorker';\n// import { Router, Route, Link } from \"react-router\";\n\n\n\n\nReactDOM.render(<BrowserRouter><div><App /></div></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}